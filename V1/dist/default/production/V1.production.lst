

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon May 29 12:53:54 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25  0000                     
    26                           ; Version 1.42
    27                           ; Generated 13/04/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F25K80 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _RCREG1	set	4014
    61  0000                     _PIR1bits	set	3998
    62  0000                     _TXREG1	set	4013
    63  0000                     _TXSTA1bits	set	4012
    64  0000                     _PIE1bits	set	3997
    65  0000                     _SSPCON1bits	set	4038
    66  0000                     _RCSTA1bits	set	4011
    67  0000                     _BAUDCON1	set	4007
    68  0000                     _SPBRG1	set	4015
    69  0000                     _TXSTA1	set	4012
    70  0000                     _TRISC	set	3988
    71  0000                     _TRISB	set	3987
    72  0000                     _SSPSTATbits	set	4039
    73  0000                     _SSPBUF	set	4041
    74  0000                     _LATCbits	set	3979
    75  0000                     _RC1IF	set	31989
    76                           
    77                           ; #config settings
    78  0000                     
    79                           	psect	cinit
    80  007C24                     __pcinit:
    81                           	opt stack 0
    82  007C24                     start_initialization:
    83                           	opt stack 0
    84  007C24                     __initialization:
    85                           	opt stack 0
    86                           
    87                           ; Clear objects allocated to COMRAM (24 bytes)
    88  007C24  EE00  F026         	lfsr	0,__pbssCOMRAM
    89  007C28  0E18               	movlw	24
    90  007C2A                     clear_0:
    91  007C2A  6AEE               	clrf	postinc0,c
    92  007C2C  06E8               	decf	wreg,f,c
    93  007C2E  E1FD               	bnz	clear_0
    94  007C30                     end_of_initialization:
    95                           	opt stack 0
    96  007C30                     __end_of__initialization:
    97                           	opt stack 0
    98  007C30  0100               	movlb	0
    99  007C32  EFA2  F03F         	goto	_main	;jump to C main() function
   100                           postinc0	equ	0xFEE
   101                           wreg	equ	0xFE8
   102                           
   103                           	psect	bssCOMRAM
   104  000026                     __pbssCOMRAM:
   105                           	opt stack 0
   106  000026                     _CDC_RESULT:
   107                           	opt stack 0
   108  000026                     	ds	24
   109                           postinc0	equ	0xFEE
   110                           wreg	equ	0xFE8
   111                           
   112                           	psect	cstackCOMRAM
   113  000001                     __pcstackCOMRAM:
   114                           	opt stack 0
   115  000001                     ?_w16_r16_spi:
   116                           	opt stack 0
   117  000001                     ?___awdiv:
   118                           	opt stack 0
   119  000001                     uart_write_char@data:
   120                           	opt stack 0
   121  000001                     get_CDC@number:
   122                           	opt stack 0
   123  000001                     w32_spi@address:
   124                           	opt stack 0
   125  000001                     w16_r16_spi@address:
   126                           	opt stack 0
   127  000001                     uart_write_unsigned_int@number:
   128                           	opt stack 0
   129  000001                     ___awdiv@dividend:
   130                           	opt stack 0
   131                           
   132                           ; 2 bytes @ 0x0
   133  000001                     	ds	2
   134  000003                     ??_w16_r16_spi:
   135  000003                     uart_write_unsigned_int@char1:
   136                           	opt stack 0
   137  000003                     get_CDC@option:
   138                           	opt stack 0
   139  000003                     w32_spi@data:
   140                           	opt stack 0
   141  000003                     ___awdiv@divisor:
   142                           	opt stack 0
   143                           
   144                           ; 2 bytes @ 0x2
   145  000003                     	ds	1
   146  000004                     uart_write_unsigned_int@char2:
   147                           	opt stack 0
   148                           
   149                           ; 1 bytes @ 0x3
   150  000004                     	ds	1
   151  000005                     ??_w32_spi:
   152  000005                     ___awdiv@counter:
   153                           	opt stack 0
   154  000005                     w16_r16_spi@p1:
   155                           	opt stack 0
   156                           
   157                           ; 2 bytes @ 0x4
   158  000005                     	ds	1
   159  000006                     ___awdiv@sign:
   160                           	opt stack 0
   161                           
   162                           ; 1 bytes @ 0x5
   163  000006                     	ds	1
   164  000007                     w32_spi@p1:
   165                           	opt stack 0
   166  000007                     w16_r16_spi@p2:
   167                           	opt stack 0
   168  000007                     ___awdiv@quotient:
   169                           	opt stack 0
   170                           
   171                           ; 2 bytes @ 0x6
   172  000007                     	ds	2
   173  000009                     delay_ms@n:
   174                           	opt stack 0
   175  000009                     w32_spi@p2:
   176                           	opt stack 0
   177  000009                     w16_r16_spi@address_low:
   178                           	opt stack 0
   179                           
   180                           ; 2 bytes @ 0x8
   181  000009                     	ds	2
   182  00000B                     ??_delay_ms:
   183  00000B                     w32_spi@p3:
   184                           	opt stack 0
   185  00000B                     w16_r16_spi@address_high:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0xA
   189  00000B                     	ds	1
   190  00000C                     delay_ms@j:
   191                           	opt stack 0
   192                           
   193                           ; 2 bytes @ 0xB
   194  00000C                     	ds	1
   195  00000D                     w32_spi@p4:
   196                           	opt stack 0
   197  00000D                     w16_r16_spi@result:
   198                           	opt stack 0
   199                           
   200                           ; 2 bytes @ 0xC
   201  00000D                     	ds	2
   202  00000F                     w32_spi@address_low:
   203                           	opt stack 0
   204  00000F                     w16_r16_spi@blank_low:
   205                           	opt stack 0
   206                           
   207                           ; 2 bytes @ 0xE
   208  00000F                     	ds	2
   209  000011                     w32_spi@address_high:
   210                           	opt stack 0
   211  000011                     w16_r16_spi@blank_high:
   212                           	opt stack 0
   213                           
   214                           ; 2 bytes @ 0x10
   215  000011                     	ds	2
   216  000013                     w32_spi@data_low:
   217                           	opt stack 0
   218  000013                     w16_r16_spi@p3:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0x12
   222  000013                     	ds	2
   223  000015                     w32_spi@data_high:
   224                           	opt stack 0
   225  000015                     w16_r16_spi@p4:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x14
   229  000015                     	ds	2
   230  000017                     ?_read_sensor:
   231                           	opt stack 0
   232  000017                     ?_get_ID:
   233                           	opt stack 0
   234  000017                     read_sensor@sensor:
   235                           	opt stack 0
   236  000017                     get_ID@cdc:
   237                           	opt stack 0
   238  000017                     switch_LED@state:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x16
   242  000017                     	ds	2
   243  000019                     ??_get_ID:
   244  000019                     read_sensor@register1:
   245                           	opt stack 0
   246  000019                     switch_LED@cdc:
   247                           	opt stack 0
   248                           
   249                           ; 2 bytes @ 0x18
   250  000019                     	ds	1
   251  00001A                     get_ID@result:
   252                           	opt stack 0
   253                           
   254                           ; 2 bytes @ 0x19
   255  00001A                     	ds	1
   256  00001B                     read_sensor@sensor_value:
   257                           	opt stack 0
   258  00001B                     switch_LED@message:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0x1A
   262  00001B                     	ds	2
   263  00001D                     switch_LED@message_277:
   264                           	opt stack 0
   265                           
   266                           ; 2 bytes @ 0x1C
   267  00001D                     	ds	2
   268  00001F                     main@bb:
   269                           	opt stack 0
   270                           
   271                           ; 2 bytes @ 0x1E
   272  00001F                     	ds	2
   273  000021                     main@device_ID:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0x20
   277  000021                     	ds	2
   278  000023                     main@sensor_0:
   279                           	opt stack 0
   280                           
   281                           ; 2 bytes @ 0x22
   282  000023                     	ds	2
   283  000025                     main@indicator:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x24
   287  000025                     	ds	1
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           
   291 ;;
   292 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   293 ;;
   294 ;; *************** function _main *****************
   295 ;; Defined at:
   296 ;;		line 6 in file "main.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;  sensor_0        2   34[COMRAM] unsigned int 
   301 ;;  device_ID       2   32[COMRAM] unsigned int 
   302 ;;  bb              2   30[COMRAM] unsigned int 
   303 ;;  indicator       1   36[COMRAM] unsigned char 
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2, status,0, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   314 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   316 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   317 ;;Total ram usage:        7 bytes
   318 ;; Hardware stack levels required when called:    2
   319 ;; This function calls:
   320 ;;		_delay_ms
   321 ;;		_get_ID
   322 ;;		_read_sensor
   323 ;;		_setup_mcu
   324 ;;		_setup_spi
   325 ;;		_switch_LED
   326 ;;		_uart_write_char
   327 ;;		_uart_write_unsigned_int
   328 ;; This function is called by:
   329 ;;		Startup code after reset
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           	psect	text0
   334  007F44                     __ptext0:
   335                           	opt stack 0
   336  007F44                     _main:
   337                           	opt stack 29
   338                           
   339                           ;main.c: 8: delay_ms(500);
   340                           
   341                           ;incstack = 0
   342  007F44  0E01               	movlw	1
   343  007F46  6E0A               	movwf	delay_ms@n+1,c
   344  007F48  0EF4               	movlw	244
   345  007F4A  6E09               	movwf	delay_ms@n,c
   346  007F4C  EC68  F03E         	call	_delay_ms	;wreg free
   347                           
   348                           ;main.c: 9: setup_mcu();
   349  007F50  ECFF  F03D         	call	_setup_mcu	;wreg free
   350                           
   351                           ;main.c: 10: setup_spi();
   352  007F54  EC25  F03E         	call	_setup_spi	;wreg free
   353                           
   354                           ;main.c: 16: char indicator = 'f';
   355  007F58  0E66               	movlw	102
   356  007F5A  6E25               	movwf	main@indicator,c
   357                           
   358                           ;main.c: 17: unsigned int bb = 1020;
   359  007F5C  0E03               	movlw	3
   360  007F5E  6E20               	movwf	main@bb+1,c
   361  007F60  0EFC               	movlw	252
   362  007F62  6E1F               	movwf	main@bb,c
   363  007F64                     l1623:
   364                           
   365                           ;main.c: 19: {
   366                           ;main.c: 20: if (indicator == 'i')
   367  007F64  0E69               	movlw	105
   368  007F66  1825               	xorwf	main@indicator,w,c
   369  007F68  A4D8               	btfss	status,2,c
   370  007F6A  D013               	goto	l1631
   371                           
   372                           ;main.c: 21: {
   373                           ;main.c: 22: uart_write_char('i');
   374  007F6C  0E69               	movlw	105
   375  007F6E  EC04  F03E         	call	_uart_write_char
   376                           
   377                           ;main.c: 23: unsigned int device_ID = get_ID(2);
   378  007F72  0E00               	movlw	0
   379  007F74  6E18               	movwf	get_ID@cdc+1,c
   380  007F76  0E02               	movlw	2
   381  007F78  6E17               	movwf	get_ID@cdc,c
   382  007F7A  EC88  F03E         	call	_get_ID	;wreg free
   383  007F7E  C017  F021         	movff	?_get_ID,main@device_ID
   384  007F82  C018  F022         	movff	?_get_ID+1,main@device_ID+1
   385                           
   386                           ;main.c: 24: uart_write_unsigned_int(device_ID);
   387  007F86  C021  F001         	movff	main@device_ID,uart_write_unsigned_int@number
   388  007F8A  C022  F002         	movff	main@device_ID+1,uart_write_unsigned_int@number+1
   389  007F8E  EC30  F03E         	call	_uart_write_unsigned_int	;wreg free
   390  007F92                     l1631:
   391                           
   392                           ;main.c: 25: }
   393                           ;main.c: 26: if (indicator = 'l')
   394  007F92  0E6C               	movlw	108
   395  007F94  6E25               	movwf	main@indicator,c
   396                           
   397                           ;main.c: 27: {
   398                           ;main.c: 28: switch_LED(1,1);
   399  007F96  0E00               	movlw	0
   400  007F98  6E18               	movwf	switch_LED@state+1,c
   401  007F9A  0E01               	movlw	1
   402  007F9C  6E17               	movwf	switch_LED@state,c
   403  007F9E  0E00               	movlw	0
   404  007FA0  6E1A               	movwf	switch_LED@cdc+1,c
   405  007FA2  0E01               	movlw	1
   406  007FA4  6E19               	movwf	switch_LED@cdc,c
   407  007FA6  ECB4  F03E         	call	_switch_LED	;wreg free
   408                           
   409                           ;main.c: 29: }
   410                           ;main.c: 30: if (indicator == 's')
   411  007FAA  0E73               	movlw	115
   412  007FAC  1825               	xorwf	main@indicator,w,c
   413  007FAE  A4D8               	btfss	status,2,c
   414  007FB0  D013               	goto	l1643
   415                           
   416                           ;main.c: 31: {
   417                           ;main.c: 32: uart_write_char('s');
   418  007FB2  0E73               	movlw	115
   419  007FB4  EC04  F03E         	call	_uart_write_char
   420                           
   421                           ;main.c: 33: unsigned int sensor_0 = read_sensor(0);
   422  007FB8  0E00               	movlw	0
   423  007FBA  6E18               	movwf	read_sensor@sensor+1,c
   424  007FBC  0E00               	movlw	0
   425  007FBE  6E17               	movwf	read_sensor@sensor,c
   426  007FC0  EC51  F03E         	call	_read_sensor	;wreg free
   427  007FC4  C017  F023         	movff	?_read_sensor,main@sensor_0
   428  007FC8  C018  F024         	movff	?_read_sensor+1,main@sensor_0+1
   429                           
   430                           ;main.c: 34: uart_write_unsigned_int(sensor_0);
   431  007FCC  C023  F001         	movff	main@sensor_0,uart_write_unsigned_int@number
   432  007FD0  C024  F002         	movff	main@sensor_0+1,uart_write_unsigned_int@number+1
   433  007FD4  EC30  F03E         	call	_uart_write_unsigned_int	;wreg free
   434  007FD8                     l1643:
   435                           
   436                           ;main.c: 35: }
   437                           ;main.c: 36: if (indicator == 'f')
   438  007FD8  0E66               	movlw	102
   439  007FDA  1825               	xorwf	main@indicator,w,c
   440  007FDC  A4D8               	btfss	status,2,c
   441  007FDE  D009               	goto	l1649
   442                           
   443                           ;main.c: 37: {
   444                           ;main.c: 38: uart_write_char('f');
   445  007FE0  0E66               	movlw	102
   446  007FE2  EC04  F03E         	call	_uart_write_char
   447                           
   448                           ;main.c: 40: uart_write_unsigned_int(bb);
   449  007FE6  C01F  F001         	movff	main@bb,uart_write_unsigned_int@number
   450  007FEA  C020  F002         	movff	main@bb+1,uart_write_unsigned_int@number+1
   451  007FEE  EC30  F03E         	call	_uart_write_unsigned_int	;wreg free
   452  007FF2                     l1649:
   453                           
   454                           ;main.c: 41: }
   455                           ;main.c: 42: delay_ms(500);
   456  007FF2  0E01               	movlw	1
   457  007FF4  6E0A               	movwf	delay_ms@n+1,c
   458  007FF6  0EF4               	movlw	244
   459  007FF8  6E09               	movwf	delay_ms@n,c
   460  007FFA  EC68  F03E         	call	_delay_ms	;wreg free
   461  007FFE  D7B2               	goto	l1623
   462  008000                     __end_of_main:
   463                           	opt stack 0
   464                           postinc0	equ	0xFEE
   465                           wreg	equ	0xFE8
   466                           status	equ	0xFD8
   467                           
   468 ;; *************** function _uart_write_unsigned_int *****************
   469 ;; Defined at:
   470 ;;		line 39 in file "uart.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;  number          2    0[COMRAM] unsigned int 
   473 ;; Auto vars:     Size  Location     Type
   474 ;;  char2           1    3[COMRAM] unsigned char 
   475 ;;  char1           1    2[COMRAM] unsigned char 
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, status,2
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   486 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   488 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   489 ;;Total ram usage:        4 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; This function calls:
   492 ;;		Nothing
   493 ;; This function is called by:
   494 ;;		_main
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           	psect	text1
   499  007C60                     __ptext1:
   500                           	opt stack 0
   501  007C60                     _uart_write_unsigned_int:
   502                           	opt stack 30
   503                           
   504                           ;uart.c: 41: char char1 = number & 0xFF;
   505                           
   506                           ;incstack = 0
   507  007C60  C001  F003         	movff	uart_write_unsigned_int@number,uart_write_unsigned_int@char1
   508                           
   509                           ;uart.c: 42: char char2 = number >> 8;
   510  007C64  5002               	movf	uart_write_unsigned_int@number+1,w,c
   511  007C66  6E04               	movwf	uart_write_unsigned_int@char2,c
   512  007C68                     l230:
   513  007C68  A2AC               	btfss	4012,1,c	;volatile
   514  007C6A  D7FE               	goto	l230
   515                           
   516                           ;uart.c: 45: TXREG1 = char1;
   517  007C6C  C003  FFAD         	movff	uart_write_unsigned_int@char1,4013	;volatile
   518  007C70                     l233:
   519  007C70  A2AC               	btfss	4012,1,c	;volatile
   520  007C72  D7FE               	goto	l233
   521                           
   522                           ;uart.c: 47: TXREG1 = char2;
   523  007C74  C004  FFAD         	movff	uart_write_unsigned_int@char2,4013	;volatile
   524  007C78  0012               	return		;funcret
   525  007C7A                     __end_of_uart_write_unsigned_int:
   526                           	opt stack 0
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           status	equ	0xFD8
   530                           
   531 ;; *************** function _uart_write_char *****************
   532 ;; Defined at:
   533 ;;		line 24 in file "uart.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;  data            1    wreg     unsigned char 
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  data            1    0[COMRAM] unsigned char 
   538 ;; Return value:  Size  Location     Type
   539 ;;                  1    wreg      void 
   540 ;; Registers used:
   541 ;;		wreg
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   550 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   551 ;;Total ram usage:        1 bytes
   552 ;; Hardware stack levels used:    1
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		_main
   557 ;;		_uart_write_string
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text2
   562  007C08                     __ptext2:
   563                           	opt stack 0
   564  007C08                     _uart_write_char:
   565                           	opt stack 30
   566                           
   567                           ;incstack = 0
   568                           ;uart_write_char@data stored from wreg
   569  007C08  6E01               	movwf	uart_write_char@data,c
   570  007C0A                     l218:
   571  007C0A  A2AC               	btfss	4012,1,c	;volatile
   572  007C0C  D7FE               	goto	l218
   573                           
   574                           ;uart.c: 28: TXREG1 = data;
   575  007C0E  C001  FFAD         	movff	uart_write_char@data,4013	;volatile
   576  007C12  0012               	return		;funcret
   577  007C14                     __end_of_uart_write_char:
   578                           	opt stack 0
   579                           postinc0	equ	0xFEE
   580                           wreg	equ	0xFE8
   581                           status	equ	0xFD8
   582                           
   583 ;; *************** function _switch_LED *****************
   584 ;; Defined at:
   585 ;;		line 313 in file "AD7147.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  state           2   22[COMRAM] unsigned int 
   588 ;;  cdc             2   24[COMRAM] unsigned int 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  message         2   28[COMRAM] unsigned int 
   591 ;;  message         2   26[COMRAM] unsigned int 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, status,2, status,0, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   601 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   602 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   604 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   605 ;;Total ram usage:        8 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    1
   608 ;; This function calls:
   609 ;;		_get_CDC
   610 ;;		_w32_spi
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text3
   617  007D68                     __ptext3:
   618                           	opt stack 0
   619  007D68                     _switch_LED:
   620                           	opt stack 29
   621                           
   622                           ;AD7147.c: 315: get_CDC(cdc,0);
   623                           
   624                           ;incstack = 0
   625  007D68  C019  F001         	movff	switch_LED@cdc,get_CDC@number
   626  007D6C  C01A  F002         	movff	switch_LED@cdc+1,get_CDC@number+1
   627  007D70  0E00               	movlw	0
   628  007D72  6E04               	movwf	get_CDC@option+1,c
   629  007D74  0E00               	movlw	0
   630  007D76  6E03               	movwf	get_CDC@option,c
   631  007D78  EC3D  F03E         	call	_get_CDC	;wreg free
   632                           
   633                           ;AD7147.c: 316: if (state==1)
   634  007D7C  0417               	decf	switch_LED@state,w,c
   635  007D7E  1018               	iorwf	switch_LED@state+1,w,c
   636  007D80  A4D8               	btfss	status,2,c
   637  007D82  D00F               	goto	l1415
   638                           
   639                           ;AD7147.c: 317: {
   640                           ;AD7147.c: 318: unsigned int message = 0b0011000000000000;
   641  007D84  0E30               	movlw	48
   642  007D86  6E1C               	movwf	switch_LED@message+1,c
   643  007D88  0E00               	movlw	0
   644  007D8A  6E1B               	movwf	switch_LED@message,c
   645                           
   646                           ;AD7147.c: 319: w32_spi((0xE000 + 0x005),message);
   647  007D8C  0EE0               	movlw	224
   648  007D8E  6E02               	movwf	w32_spi@address+1,c
   649  007D90  0E05               	movlw	5
   650  007D92  6E01               	movwf	w32_spi@address,c
   651  007D94  C01B  F003         	movff	switch_LED@message,w32_spi@data
   652  007D98  C01C  F004         	movff	switch_LED@message+1,w32_spi@data+1
   653  007D9C  ECEA  F03E         	call	_w32_spi	;wreg free
   654                           
   655                           ;AD7147.c: 320: }
   656  007DA0  D00E               	goto	l1419
   657  007DA2                     l1415:
   658                           
   659                           ;AD7147.c: 321: else
   660                           ;AD7147.c: 322: {
   661                           ;AD7147.c: 324: unsigned int message = 0b0010000000000000;
   662  007DA2  0E20               	movlw	32
   663  007DA4  6E1E               	movwf	switch_LED@message_277+1,c
   664  007DA6  0E00               	movlw	0
   665  007DA8  6E1D               	movwf	switch_LED@message_277,c
   666                           
   667                           ;AD7147.c: 325: w32_spi((0xE000 + 0x005),message);
   668  007DAA  0EE0               	movlw	224
   669  007DAC  6E02               	movwf	w32_spi@address+1,c
   670  007DAE  0E05               	movlw	5
   671  007DB0  6E01               	movwf	w32_spi@address,c
   672  007DB2  C01D  F003         	movff	switch_LED@message_277,w32_spi@data
   673  007DB6  C01E  F004         	movff	switch_LED@message_277+1,w32_spi@data+1
   674  007DBA  ECEA  F03E         	call	_w32_spi	;wreg free
   675  007DBE                     l1419:
   676                           
   677                           ;AD7147.c: 326: }
   678                           ;AD7147.c: 327: get_CDC(cdc,0);
   679  007DBE  C019  F001         	movff	switch_LED@cdc,get_CDC@number
   680  007DC2  C01A  F002         	movff	switch_LED@cdc+1,get_CDC@number+1
   681  007DC6  0E00               	movlw	0
   682  007DC8  6E04               	movwf	get_CDC@option+1,c
   683  007DCA  0E00               	movlw	0
   684  007DCC  6E03               	movwf	get_CDC@option,c
   685  007DCE  EC3D  F03E         	call	_get_CDC	;wreg free
   686  007DD2  0012               	return		;funcret
   687  007DD4                     __end_of_switch_LED:
   688                           	opt stack 0
   689                           postinc0	equ	0xFEE
   690                           wreg	equ	0xFE8
   691                           status	equ	0xFD8
   692                           
   693 ;; *************** function _w32_spi *****************
   694 ;; Defined at:
   695 ;;		line 26 in file "spi.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;  address         2    0[COMRAM] unsigned int 
   698 ;;  data            2    2[COMRAM] unsigned int 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  data_high       2   20[COMRAM] unsigned int 
   701 ;;  data_low        2   18[COMRAM] unsigned int 
   702 ;;  address_high    2   16[COMRAM] unsigned int 
   703 ;;  address_low     2   14[COMRAM] unsigned int 
   704 ;;  p4              2   12[COMRAM] unsigned int 
   705 ;;  p3              2   10[COMRAM] unsigned int 
   706 ;;  p2              2    8[COMRAM] unsigned int 
   707 ;;  p1              2    6[COMRAM] unsigned int 
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		wreg, status,2
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   718 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   719 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   720 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   721 ;;Total ram usage:       22 bytes
   722 ;; Hardware stack levels used:    1
   723 ;; This function calls:
   724 ;;		Nothing
   725 ;; This function is called by:
   726 ;;		_switch_LED
   727 ;;		_write_AD7147
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text4
   732  007DD4                     __ptext4:
   733                           	opt stack 0
   734  007DD4                     _w32_spi:
   735                           	opt stack 29
   736                           
   737                           ;spi.c: 28: unsigned int address_low, address_high, data_low, data_high;
   738                           ;spi.c: 30: address_low = address & 0xFF;
   739                           
   740                           ;incstack = 0
   741  007DD4  5001               	movf	w32_spi@address,w,c
   742  007DD6  6E0F               	movwf	w32_spi@address_low,c
   743  007DD8  6A10               	clrf	w32_spi@address_low+1,c
   744                           
   745                           ;spi.c: 31: address_high = (address >> 8) & 0xFF;
   746  007DDA  C001  F005         	movff	w32_spi@address,??_w32_spi
   747  007DDE  C002  F006         	movff	w32_spi@address+1,??_w32_spi+1
   748  007DE2  C006  F005         	movff	??_w32_spi+1,??_w32_spi
   749  007DE6  6A06               	clrf	??_w32_spi+1,c
   750  007DE8  5005               	movf	??_w32_spi,w,c
   751  007DEA  6E11               	movwf	w32_spi@address_high,c
   752  007DEC  6A12               	clrf	w32_spi@address_high+1,c
   753                           
   754                           ;spi.c: 33: data_low = data & 0xFF;
   755  007DEE  5003               	movf	w32_spi@data,w,c
   756  007DF0  6E13               	movwf	w32_spi@data_low,c
   757  007DF2  6A14               	clrf	w32_spi@data_low+1,c
   758                           
   759                           ;spi.c: 34: data_high = (data >> 8) & 0xFF;
   760  007DF4  C003  F005         	movff	w32_spi@data,??_w32_spi
   761  007DF8  C004  F006         	movff	w32_spi@data+1,??_w32_spi+1
   762  007DFC  C006  F005         	movff	??_w32_spi+1,??_w32_spi
   763  007E00  6A06               	clrf	??_w32_spi+1,c
   764  007E02  5005               	movf	??_w32_spi,w,c
   765  007E04  6E15               	movwf	w32_spi@data_high,c
   766  007E06  6A16               	clrf	w32_spi@data_high+1,c
   767                           
   768                           ;spi.c: 36: SSPBUF = address_high;
   769  007E08  C011  FFC9         	movff	w32_spi@address_high,4041	;volatile
   770  007E0C                     l151:
   771  007E0C  A0C7               	btfss	4039,0,c	;volatile
   772  007E0E  D7FE               	goto	l151
   773                           
   774                           ;spi.c: 38: unsigned int p1 = SSPBUF;
   775  007E10  CFC9 F007          	movff	4041,w32_spi@p1	;volatile
   776  007E14  6A08               	clrf	w32_spi@p1+1,c
   777                           
   778                           ;spi.c: 40: SSPBUF = address_low;
   779  007E16  C00F  FFC9         	movff	w32_spi@address_low,4041	;volatile
   780  007E1A                     l154:
   781  007E1A  A0C7               	btfss	4039,0,c	;volatile
   782  007E1C  D7FE               	goto	l154
   783                           
   784                           ;spi.c: 42: unsigned int p2 = SSPBUF;
   785  007E1E  CFC9 F009          	movff	4041,w32_spi@p2	;volatile
   786  007E22  6A0A               	clrf	w32_spi@p2+1,c
   787                           
   788                           ;spi.c: 44: SSPBUF = data_high;
   789  007E24  C015  FFC9         	movff	w32_spi@data_high,4041	;volatile
   790  007E28                     l157:
   791  007E28  A0C7               	btfss	4039,0,c	;volatile
   792  007E2A  D7FE               	goto	l157
   793                           
   794                           ;spi.c: 46: unsigned int p3 = SSPBUF;
   795  007E2C  CFC9 F00B          	movff	4041,w32_spi@p3	;volatile
   796  007E30  6A0C               	clrf	w32_spi@p3+1,c
   797                           
   798                           ;spi.c: 48: SSPBUF = data_low;
   799  007E32  C013  FFC9         	movff	w32_spi@data_low,4041	;volatile
   800  007E36                     l160:
   801  007E36  A0C7               	btfss	4039,0,c	;volatile
   802  007E38  D7FE               	goto	l160
   803                           
   804                           ;spi.c: 50: unsigned int p4 = SSPBUF;
   805  007E3A  CFC9 F00D          	movff	4041,w32_spi@p4	;volatile
   806  007E3E  6A0E               	clrf	w32_spi@p4+1,c
   807  007E40  0012               	return		;funcret
   808  007E42                     __end_of_w32_spi:
   809                           	opt stack 0
   810                           postinc0	equ	0xFEE
   811                           wreg	equ	0xFE8
   812                           status	equ	0xFD8
   813                           
   814 ;; *************** function _setup_spi *****************
   815 ;; Defined at:
   816 ;;		line 4 in file "spi.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		None
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   834 ;;Total ram usage:        0 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text5
   844  007C4A                     __ptext5:
   845                           	opt stack 0
   846  007C4A                     _setup_spi:
   847                           	opt stack 30
   848                           
   849                           ;spi.c: 6: SSPSTATbits.SMP = 0;
   850                           
   851                           ;incstack = 0
   852  007C4A  9EC7               	bcf	4039,7,c	;volatile
   853                           
   854                           ;spi.c: 7: SSPSTATbits.CKE = 0;
   855  007C4C  9CC7               	bcf	4039,6,c	;volatile
   856                           
   857                           ;spi.c: 9: SSPCON1bits.WCOL = 0;
   858  007C4E  9EC6               	bcf	4038,7,c	;volatile
   859                           
   860                           ;spi.c: 10: SSPCON1bits.CKP = 1;
   861  007C50  88C6               	bsf	4038,4,c	;volatile
   862                           
   863                           ;spi.c: 12: SSPCON1bits.SSPM3 = 0;
   864  007C52  96C6               	bcf	4038,3,c	;volatile
   865                           
   866                           ;spi.c: 13: SSPCON1bits.SSPM2 = 0;
   867  007C54  94C6               	bcf	4038,2,c	;volatile
   868                           
   869                           ;spi.c: 14: SSPCON1bits.SSPM1 = 1;
   870  007C56  82C6               	bsf	4038,1,c	;volatile
   871                           
   872                           ;spi.c: 15: SSPCON1bits.SSPM0 = 0;
   873  007C58  90C6               	bcf	4038,0,c	;volatile
   874                           
   875                           ;spi.c: 17: PIE1bits.SSPIE = 0;
   876  007C5A  969D               	bcf	3997,3,c	;volatile
   877                           
   878                           ;spi.c: 19: SSPCON1bits.SSPEN = 1;
   879  007C5C  8AC6               	bsf	4038,5,c	;volatile
   880  007C5E  0012               	return		;funcret
   881  007C60                     __end_of_setup_spi:
   882                           	opt stack 0
   883                           postinc0	equ	0xFEE
   884                           wreg	equ	0xFE8
   885                           status	equ	0xFD8
   886                           
   887 ;; *************** function _setup_mcu *****************
   888 ;; Defined at:
   889 ;;		line 6 in file "micro_setup.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, status,2, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   907 ;;Total ram usage:        0 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    1
   910 ;; This function calls:
   911 ;;		_init_uart
   912 ;;		_setup_port
   913 ;; This function is called by:
   914 ;;		_main
   915 ;; This function uses a non-reentrant model
   916 ;;
   917                           
   918                           	psect	text6
   919  007BFE                     __ptext6:
   920                           	opt stack 0
   921  007BFE                     _setup_mcu:
   922                           	opt stack 29
   923                           
   924                           ;micro_setup.c: 8: setup_port();
   925                           
   926                           ;incstack = 0
   927  007BFE  EC0A  F03E         	call	_setup_port	;wreg free
   928                           
   929                           ;micro_setup.c: 9: init_uart();
   930  007C02  EC1B  F03E         	call	_init_uart	;wreg free
   931  007C06  0012               	return		;funcret
   932  007C08                     __end_of_setup_mcu:
   933                           	opt stack 0
   934                           postinc0	equ	0xFEE
   935                           wreg	equ	0xFE8
   936                           status	equ	0xFD8
   937                           
   938 ;; *************** function _setup_port *****************
   939 ;; Defined at:
   940 ;;		line 12 in file "micro_setup.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, status,2
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   958 ;;Total ram usage:        0 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_setup_mcu
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text7
   968  007C14                     __ptext7:
   969                           	opt stack 0
   970  007C14                     _setup_port:
   971                           	opt stack 29
   972                           
   973                           ;micro_setup.c: 15: TRISB = 0b00000000;
   974                           
   975                           ;incstack = 0
   976  007C14  0E00               	movlw	0
   977  007C16  6E93               	movwf	3987,c	;volatile
   978                           
   979                           ;micro_setup.c: 16: TRISC = 0b10010000;
   980  007C18  0E90               	movlw	144
   981  007C1A  6E94               	movwf	3988,c	;volatile
   982                           
   983                           ;micro_setup.c: 17: LATCbits.LATC1=1;
   984  007C1C  828B               	bsf	3979,1,c	;volatile
   985                           
   986                           ;micro_setup.c: 18: LATCbits.LATC0=1;
   987  007C1E  808B               	bsf	3979,0,c	;volatile
   988                           
   989                           ;micro_setup.c: 19: LATCbits.LATC2=1;
   990  007C20  848B               	bsf	3979,2,c	;volatile
   991  007C22  0012               	return		;funcret
   992  007C24                     __end_of_setup_port:
   993                           	opt stack 0
   994                           postinc0	equ	0xFEE
   995                           wreg	equ	0xFE8
   996                           status	equ	0xFD8
   997                           
   998 ;; *************** function _init_uart *****************
   999 ;; Defined at:
  1000 ;;		line 22 in file "micro_setup.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;		None
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1018 ;;Total ram usage:        0 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; This function calls:
  1021 ;;		Nothing
  1022 ;; This function is called by:
  1023 ;;		_setup_mcu
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text8
  1028  007C36                     __ptext8:
  1029                           	opt stack 0
  1030  007C36                     _init_uart:
  1031                           	opt stack 29
  1032                           
  1033                           ;micro_setup.c: 24: TXSTA1 = 0b00100000;
  1034                           
  1035                           ;incstack = 0
  1036  007C36  0E20               	movlw	32
  1037  007C38  6EAC               	movwf	4012,c	;volatile
  1038                           
  1039                           ;micro_setup.c: 36: SPBRG1 = 12;
  1040  007C3A  0E0C               	movlw	12
  1041  007C3C  6EAF               	movwf	4015,c	;volatile
  1042                           
  1043                           ;micro_setup.c: 38: BAUDCON1 = 0b00000000;
  1044  007C3E  0E00               	movlw	0
  1045  007C40  6EA7               	movwf	4007,c	;volatile
  1046                           
  1047                           ;micro_setup.c: 58: RCSTA1bits.SPEN=1;
  1048  007C42  8EAB               	bsf	4011,7,c	;volatile
  1049                           
  1050                           ;micro_setup.c: 59: RCSTA1bits.RX9=0;
  1051  007C44  9CAB               	bcf	4011,6,c	;volatile
  1052                           
  1053                           ;micro_setup.c: 60: RCSTA1bits.CREN=1;
  1054  007C46  88AB               	bsf	4011,4,c	;volatile
  1055  007C48  0012               	return		;funcret
  1056  007C4A                     __end_of_init_uart:
  1057                           	opt stack 0
  1058                           postinc0	equ	0xFEE
  1059                           wreg	equ	0xFE8
  1060                           status	equ	0xFD8
  1061                           
  1062 ;; *************** function _read_sensor *****************
  1063 ;; Defined at:
  1064 ;;		line 237 in file "AD7147.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  sensor          2   22[COMRAM] unsigned int 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  sensor_value    2   26[COMRAM] unsigned int 
  1069 ;;  register1       2   24[COMRAM] unsigned int 
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  2   22[COMRAM] unsigned int 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1079 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1080 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1082 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1083 ;;Total ram usage:        6 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    1
  1086 ;; This function calls:
  1087 ;;		_w16_r16_spi
  1088 ;; This function is called by:
  1089 ;;		_main
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text9
  1094  007CA2                     __ptext9:
  1095                           	opt stack 0
  1096  007CA2                     _read_sensor:
  1097                           	opt stack 29
  1098                           
  1099                           ;AD7147.c: 239: unsigned int register1 = 0xE400 + 0x00B + sensor;
  1100                           
  1101                           ;incstack = 0
  1102  007CA2  0E0B               	movlw	11
  1103  007CA4  2417               	addwf	read_sensor@sensor,w,c
  1104  007CA6  6E19               	movwf	read_sensor@register1,c
  1105  007CA8  0EE4               	movlw	228
  1106  007CAA  2018               	addwfc	read_sensor@sensor+1,w,c
  1107  007CAC  6E1A               	movwf	read_sensor@register1+1,c
  1108                           
  1109                           ;AD7147.c: 240: LATCbits.LATC1 = 0;
  1110  007CAE  928B               	bcf	3979,1,c	;volatile
  1111                           
  1112                           ;AD7147.c: 241: unsigned int sensor_value = w16_r16_spi(register1);
  1113  007CB0  C019  F001         	movff	read_sensor@register1,w16_r16_spi@address
  1114  007CB4  C01A  F002         	movff	read_sensor@register1+1,w16_r16_spi@address+1
  1115  007CB8  EC21  F03F         	call	_w16_r16_spi	;wreg free
  1116  007CBC  C001  F01B         	movff	?_w16_r16_spi,read_sensor@sensor_value
  1117  007CC0  C002  F01C         	movff	?_w16_r16_spi+1,read_sensor@sensor_value+1
  1118                           
  1119                           ;AD7147.c: 242: LATCbits.LATC1 = 1;
  1120  007CC4  828B               	bsf	3979,1,c	;volatile
  1121                           
  1122                           ;AD7147.c: 250: return sensor_value;
  1123  007CC6  C01B  F017         	movff	read_sensor@sensor_value,?_read_sensor
  1124  007CCA  C01C  F018         	movff	read_sensor@sensor_value+1,?_read_sensor+1
  1125  007CCE  0012               	return	
  1126  007CD0                     __end_of_read_sensor:
  1127                           	opt stack 0
  1128                           postinc0	equ	0xFEE
  1129                           wreg	equ	0xFE8
  1130                           status	equ	0xFD8
  1131                           
  1132 ;; *************** function _get_ID *****************
  1133 ;; Defined at:
  1134 ;;		line 305 in file "AD7147.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  cdc             2   22[COMRAM] unsigned int 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  result          2   25[COMRAM] unsigned int 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  2   22[COMRAM] unsigned int 
  1141 ;; Registers used:
  1142 ;;		wreg, status,2, status,0, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1150 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1151 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1152 ;;Total ram usage:        5 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    1
  1155 ;; This function calls:
  1156 ;;		_get_CDC
  1157 ;;		_w16_r16_spi
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text10
  1164  007D10                     __ptext10:
  1165                           	opt stack 0
  1166  007D10                     _get_ID:
  1167                           	opt stack 29
  1168                           
  1169                           ;AD7147.c: 307: get_CDC(cdc,0);
  1170                           
  1171                           ;incstack = 0
  1172  007D10  C017  F001         	movff	get_ID@cdc,get_CDC@number
  1173  007D14  C018  F002         	movff	get_ID@cdc+1,get_CDC@number+1
  1174  007D18  0E00               	movlw	0
  1175  007D1A  6E04               	movwf	get_CDC@option+1,c
  1176  007D1C  0E00               	movlw	0
  1177  007D1E  6E03               	movwf	get_CDC@option,c
  1178  007D20  EC3D  F03E         	call	_get_CDC	;wreg free
  1179                           
  1180                           ;AD7147.c: 308: unsigned int result = (w16_r16_spi(0xE400 + 0x017) & 0b1111111111110000)
      +                           >> 4;
  1181  007D24  0EE4               	movlw	228
  1182  007D26  6E02               	movwf	w16_r16_spi@address+1,c
  1183  007D28  0E17               	movlw	23
  1184  007D2A  6E01               	movwf	w16_r16_spi@address,c
  1185  007D2C  EC21  F03F         	call	_w16_r16_spi	;wreg free
  1186  007D30  0E04               	movlw	4
  1187  007D32  6E19               	movwf	??_get_ID& (0+255),c
  1188  007D34                     u675:
  1189  007D34  90D8               	bcf	status,0,c
  1190  007D36  3202               	rrcf	?_w16_r16_spi+1,f,c
  1191  007D38  3201               	rrcf	?_w16_r16_spi,f,c
  1192  007D3A  2E19               	decfsz	??_get_ID& (0+255),f,c
  1193  007D3C  D7FB               	goto	u675
  1194  007D3E  0EFF               	movlw	255
  1195  007D40  1401               	andwf	?_w16_r16_spi,w,c
  1196  007D42  6E1A               	movwf	get_ID@result,c
  1197  007D44  0E0F               	movlw	15
  1198  007D46  1402               	andwf	?_w16_r16_spi+1,w,c
  1199  007D48  6E1B               	movwf	get_ID@result+1,c
  1200                           
  1201                           ;AD7147.c: 309: get_CDC(cdc,1);
  1202  007D4A  C017  F001         	movff	get_ID@cdc,get_CDC@number
  1203  007D4E  C018  F002         	movff	get_ID@cdc+1,get_CDC@number+1
  1204  007D52  0E00               	movlw	0
  1205  007D54  6E04               	movwf	get_CDC@option+1,c
  1206  007D56  0E01               	movlw	1
  1207  007D58  6E03               	movwf	get_CDC@option,c
  1208  007D5A  EC3D  F03E         	call	_get_CDC	;wreg free
  1209                           
  1210                           ;AD7147.c: 310: return result;
  1211  007D5E  C01A  F017         	movff	get_ID@result,?_get_ID
  1212  007D62  C01B  F018         	movff	get_ID@result+1,?_get_ID+1
  1213  007D66  0012               	return	
  1214  007D68                     __end_of_get_ID:
  1215                           	opt stack 0
  1216                           postinc0	equ	0xFEE
  1217                           wreg	equ	0xFE8
  1218                           status	equ	0xFD8
  1219                           
  1220 ;; *************** function _w16_r16_spi *****************
  1221 ;; Defined at:
  1222 ;;		line 92 in file "spi.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  address         2    0[COMRAM] unsigned int 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  p4              2   20[COMRAM] unsigned int 
  1227 ;;  p3              2   18[COMRAM] unsigned int 
  1228 ;;  blank_high      2   16[COMRAM] unsigned int 
  1229 ;;  blank_low       2   14[COMRAM] unsigned int 
  1230 ;;  result          2   12[COMRAM] unsigned int 
  1231 ;;  address_high    2   10[COMRAM] unsigned int 
  1232 ;;  address_low     2    8[COMRAM] unsigned int 
  1233 ;;  p2              2    6[COMRAM] unsigned int 
  1234 ;;  p1              2    4[COMRAM] unsigned int 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  2    0[COMRAM] unsigned int 
  1237 ;; Registers used:
  1238 ;;		wreg, status,2, status,0
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1245 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1246 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1247 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1248 ;;Total ram usage:       22 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_read_sensor
  1254 ;;		_get_ID
  1255 ;;		_read_AD7147
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text11
  1260  007E42                     __ptext11:
  1261                           	opt stack 0
  1262  007E42                     _w16_r16_spi:
  1263                           	opt stack 29
  1264                           
  1265                           ;spi.c: 94: unsigned int address_low, address_high, result;
  1266                           ;spi.c: 95: unsigned int blank_low = 0x000;
  1267                           
  1268                           ;incstack = 0
  1269  007E42  0E00               	movlw	0
  1270  007E44  6E10               	movwf	w16_r16_spi@blank_low+1,c
  1271  007E46  0E00               	movlw	0
  1272  007E48  6E0F               	movwf	w16_r16_spi@blank_low,c
  1273                           
  1274                           ;spi.c: 96: unsigned int blank_high = 0x000;
  1275  007E4A  0E00               	movlw	0
  1276  007E4C  6E12               	movwf	w16_r16_spi@blank_high+1,c
  1277  007E4E  0E00               	movlw	0
  1278  007E50  6E11               	movwf	w16_r16_spi@blank_high,c
  1279                           
  1280                           ;spi.c: 97: unsigned int p1, p2, p3, p4;
  1281                           ;spi.c: 99: address_low = address & 0xFF;
  1282  007E52  5001               	movf	w16_r16_spi@address,w,c
  1283  007E54  6E09               	movwf	w16_r16_spi@address_low,c
  1284  007E56  6A0A               	clrf	w16_r16_spi@address_low+1,c
  1285                           
  1286                           ;spi.c: 100: address_high = (address >> 8) & 0xFF;
  1287  007E58  C001  F003         	movff	w16_r16_spi@address,??_w16_r16_spi
  1288  007E5C  C002  F004         	movff	w16_r16_spi@address+1,??_w16_r16_spi+1
  1289  007E60  C004  F003         	movff	??_w16_r16_spi+1,??_w16_r16_spi
  1290  007E64  6A04               	clrf	??_w16_r16_spi+1,c
  1291  007E66  5003               	movf	??_w16_r16_spi,w,c
  1292  007E68  6E0B               	movwf	w16_r16_spi@address_high,c
  1293  007E6A  6A0C               	clrf	w16_r16_spi@address_high+1,c
  1294                           
  1295                           ;spi.c: 102: SSPBUF = address_high;
  1296  007E6C  C00B  FFC9         	movff	w16_r16_spi@address_high,4041	;volatile
  1297  007E70                     l184:
  1298  007E70  A0C7               	btfss	4039,0,c	;volatile
  1299  007E72  D7FE               	goto	l184
  1300                           
  1301                           ;spi.c: 104: p1 = SSPBUF;
  1302  007E74  CFC9 F005          	movff	4041,w16_r16_spi@p1	;volatile
  1303  007E78  6A06               	clrf	w16_r16_spi@p1+1,c
  1304                           
  1305                           ;spi.c: 106: SSPBUF = address_low;
  1306  007E7A  C009  FFC9         	movff	w16_r16_spi@address_low,4041	;volatile
  1307  007E7E                     l187:
  1308  007E7E  A0C7               	btfss	4039,0,c	;volatile
  1309  007E80  D7FE               	goto	l187
  1310                           
  1311                           ;spi.c: 108: p2 = SSPBUF;
  1312  007E82  CFC9 F007          	movff	4041,w16_r16_spi@p2	;volatile
  1313  007E86  6A08               	clrf	w16_r16_spi@p2+1,c
  1314                           
  1315                           ;spi.c: 110: SSPBUF = blank_high;
  1316  007E88  C011  FFC9         	movff	w16_r16_spi@blank_high,4041	;volatile
  1317  007E8C                     l190:
  1318  007E8C  A0C7               	btfss	4039,0,c	;volatile
  1319  007E8E  D7FE               	goto	l190
  1320                           
  1321                           ;spi.c: 112: p3 = SSPBUF;
  1322  007E90  CFC9 F013          	movff	4041,w16_r16_spi@p3	;volatile
  1323  007E94  6A14               	clrf	w16_r16_spi@p3+1,c
  1324                           
  1325                           ;spi.c: 114: SSPBUF = blank_low;
  1326  007E96  C00F  FFC9         	movff	w16_r16_spi@blank_low,4041	;volatile
  1327  007E9A                     l193:
  1328  007E9A  A0C7               	btfss	4039,0,c	;volatile
  1329  007E9C  D7FE               	goto	l193
  1330                           
  1331                           ;spi.c: 116: p4 = SSPBUF;
  1332  007E9E  CFC9 F015          	movff	4041,w16_r16_spi@p4	;volatile
  1333  007EA2  6A16               	clrf	w16_r16_spi@p4+1,c
  1334                           
  1335                           ;spi.c: 118: result = (p3 << 8) + p4;
  1336  007EA4  5013               	movf	w16_r16_spi@p3,w,c
  1337  007EA6  6E04               	movwf	(??_w16_r16_spi+1)& (0+255),c
  1338  007EA8  6A03               	clrf	??_w16_r16_spi& (0+255),c
  1339  007EAA  5015               	movf	w16_r16_spi@p4,w,c
  1340  007EAC  2403               	addwf	??_w16_r16_spi,w,c
  1341  007EAE  6E0D               	movwf	w16_r16_spi@result,c
  1342  007EB0  5016               	movf	w16_r16_spi@p4+1,w,c
  1343  007EB2  2004               	addwfc	??_w16_r16_spi+1,w,c
  1344  007EB4  6E0E               	movwf	w16_r16_spi@result+1,c
  1345                           
  1346                           ;spi.c: 119: return result;
  1347  007EB6  C00D  F001         	movff	w16_r16_spi@result,?_w16_r16_spi
  1348  007EBA  C00E  F002         	movff	w16_r16_spi@result+1,?_w16_r16_spi+1
  1349  007EBE  0012               	return	
  1350  007EC0                     __end_of_w16_r16_spi:
  1351                           	opt stack 0
  1352                           postinc0	equ	0xFEE
  1353                           wreg	equ	0xFE8
  1354                           status	equ	0xFD8
  1355                           
  1356 ;; *************** function _get_CDC *****************
  1357 ;; Defined at:
  1358 ;;		line 329 in file "AD7147.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;  number          2    0[COMRAM] unsigned int 
  1361 ;;  option          2    2[COMRAM] unsigned int 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg, status,2, status,0
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/0
  1370 ;;		On exit  : 0/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1376 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1377 ;;Total ram usage:        4 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_get_ID
  1383 ;;		_switch_LED
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text12
  1388  007C7A                     __ptext12:
  1389                           	opt stack 0
  1390  007C7A                     _get_CDC:
  1391                           	opt stack 29
  1392                           
  1393                           ;AD7147.c: 331: if (option == 0)
  1394                           
  1395                           ;incstack = 0
  1396  007C7A  5003               	movf	get_CDC@option,w,c
  1397  007C7C  1004               	iorwf	get_CDC@option+1,w,c
  1398  007C7E  A4D8               	btfss	status,2,c
  1399  007C80  D008               	goto	l1341
  1400                           
  1401                           ;AD7147.c: 332: {
  1402                           ;AD7147.c: 333: if (number == 1)
  1403  007C82  0401               	decf	get_CDC@number,w,c
  1404  007C84  1002               	iorwf	get_CDC@number+1,w,c
  1405  007C86  A4D8               	btfss	status,2,c
  1406  007C88  D002               	goto	l65
  1407                           
  1408                           ;AD7147.c: 334: {
  1409                           ;AD7147.c: 335: LATCbits.LATC1 = 0;
  1410  007C8A  928B               	bcf	3979,1,c	;volatile
  1411                           
  1412                           ;AD7147.c: 336: }
  1413  007C8C  0012               	return	
  1414  007C8E                     l65:
  1415                           
  1416                           ;AD7147.c: 337: else
  1417                           ;AD7147.c: 338: {
  1418                           ;AD7147.c: 339: LATCbits.LATC0 = 0;
  1419  007C8E  908B               	bcf	3979,0,c	;volatile
  1420                           
  1421                           ;AD7147.c: 340: }
  1422                           ;AD7147.c: 341: }
  1423  007C90  0012               	return	
  1424  007C92                     l1341:
  1425                           
  1426                           ;AD7147.c: 342: else
  1427                           ;AD7147.c: 343: {
  1428                           ;AD7147.c: 344: if (number == 1)
  1429  007C92  0401               	decf	get_CDC@number,w,c
  1430  007C94  1002               	iorwf	get_CDC@number+1,w,c
  1431  007C96  A4D8               	btfss	status,2,c
  1432  007C98  D002               	goto	l68
  1433                           
  1434                           ;AD7147.c: 345: {
  1435                           ;AD7147.c: 346: LATCbits.LATC1 = 1;
  1436  007C9A  828B               	bsf	3979,1,c	;volatile
  1437                           
  1438                           ;AD7147.c: 347: }
  1439  007C9C  0012               	return	
  1440  007C9E                     l68:
  1441                           
  1442                           ;AD7147.c: 348: else
  1443                           ;AD7147.c: 349: {
  1444                           ;AD7147.c: 350: LATCbits.LATC0 = 1;
  1445  007C9E  808B               	bsf	3979,0,c	;volatile
  1446  007CA0  0012               	return	
  1447  007CA2                     __end_of_get_CDC:
  1448                           	opt stack 0
  1449                           postinc0	equ	0xFEE
  1450                           wreg	equ	0xFE8
  1451                           status	equ	0xFD8
  1452                           
  1453 ;; *************** function _delay_ms *****************
  1454 ;; Defined at:
  1455 ;;		line 67 in file "micro_setup.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  n               2    8[COMRAM] int 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  j               2   11[COMRAM] int 
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, status,2, status,0, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1471 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1472 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1473 ;;Total ram usage:        5 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    1
  1476 ;; This function calls:
  1477 ;;		___awdiv
  1478 ;; This function is called by:
  1479 ;;		_main
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text13
  1484  007CD0                     __ptext13:
  1485                           	opt stack 0
  1486  007CD0                     _delay_ms:
  1487                           	opt stack 29
  1488                           
  1489                           ;micro_setup.c: 69: int j = n/10;
  1490                           
  1491                           ;incstack = 0
  1492  007CD0  C009  F001         	movff	delay_ms@n,___awdiv@dividend
  1493  007CD4  C00A  F002         	movff	delay_ms@n+1,___awdiv@dividend+1
  1494  007CD8  0E00               	movlw	0
  1495  007CDA  6E04               	movwf	___awdiv@divisor+1,c
  1496  007CDC  0E0A               	movlw	10
  1497  007CDE  6E03               	movwf	___awdiv@divisor,c
  1498  007CE0  EC60  F03F         	call	___awdiv	;wreg free
  1499  007CE4  C001  F00C         	movff	?___awdiv,delay_ms@j
  1500  007CE8  C002  F00D         	movff	?___awdiv+1,delay_ms@j+1
  1501                           
  1502                           ;micro_setup.c: 70: while(j--)
  1503  007CEC  D008               	goto	l1425
  1504  007CEE                     l1423:
  1505                           
  1506                           ;micro_setup.c: 71: {
  1507                           ;micro_setup.c: 72: _delay((unsigned long)((10)*(8000000/4000.0)));
  1508  007CEE  0E1A               	movlw	26
  1509  007CF0  6E0B               	movwf	??_delay_ms& (0+255),c
  1510  007CF2  0EF8               	movlw	248
  1511  007CF4                     u857:
  1512  007CF4  2EE8               	decfsz	wreg,f,c
  1513  007CF6  D7FE               	bra	u857
  1514  007CF8  2E0B               	decfsz	??_delay_ms& (0+255),f,c
  1515  007CFA  D7FC               	bra	u857
  1516  007CFC  D000               	nop2	
  1517  007CFE                     l1425:
  1518  007CFE  060C               	decf	delay_ms@j,f,c
  1519  007D00  A0D8               	btfss	status,0,c
  1520  007D02  060D               	decf	delay_ms@j+1,f,c
  1521  007D04  280C               	incf	delay_ms@j,w,c
  1522  007D06  E1F3               	bnz	l1423
  1523  007D08  280D               	incf	delay_ms@j+1,w,c
  1524  007D0A  B4D8               	btfsc	status,2,c
  1525  007D0C  0012               	return	
  1526  007D0E  D7EF               	goto	l1423
  1527  007D10                     __end_of_delay_ms:
  1528                           	opt stack 0
  1529                           postinc0	equ	0xFEE
  1530                           wreg	equ	0xFE8
  1531                           status	equ	0xFD8
  1532                           
  1533 ;; *************** function ___awdiv *****************
  1534 ;; Defined at:
  1535 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  dividend        2    0[COMRAM] int 
  1538 ;;  divisor         2    2[COMRAM] int 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  quotient        2    6[COMRAM] int 
  1541 ;;  sign            1    5[COMRAM] unsigned char 
  1542 ;;  counter         1    4[COMRAM] unsigned char 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  2    0[COMRAM] int 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1552 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1553 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1555 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1556 ;;Total ram usage:        8 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		_delay_ms
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text14
  1566  007EC0                     __ptext14:
  1567                           	opt stack 0
  1568  007EC0                     ___awdiv:
  1569                           	opt stack 29
  1570                           
  1571                           ;incstack = 0
  1572  007EC0  0E00               	movlw	0
  1573  007EC2  6E06               	movwf	___awdiv@sign,c
  1574  007EC4  AE04               	btfss	___awdiv@divisor+1,7,c
  1575  007EC6  D006               	goto	l1353
  1576  007EC8  6C03               	negf	___awdiv@divisor,c
  1577  007ECA  1E04               	comf	___awdiv@divisor+1,f,c
  1578  007ECC  B0D8               	btfsc	status,0,c
  1579  007ECE  2A04               	incf	___awdiv@divisor+1,f,c
  1580  007ED0  0E01               	movlw	1
  1581  007ED2  6E06               	movwf	___awdiv@sign,c
  1582  007ED4                     l1353:
  1583  007ED4  AE02               	btfss	___awdiv@dividend+1,7,c
  1584  007ED6  D006               	goto	l1359
  1585  007ED8  6C01               	negf	___awdiv@dividend,c
  1586  007EDA  1E02               	comf	___awdiv@dividend+1,f,c
  1587  007EDC  B0D8               	btfsc	status,0,c
  1588  007EDE  2A02               	incf	___awdiv@dividend+1,f,c
  1589  007EE0  0E01               	movlw	1
  1590  007EE2  1A06               	xorwf	___awdiv@sign,f,c
  1591  007EE4                     l1359:
  1592  007EE4  0E00               	movlw	0
  1593  007EE6  6E08               	movwf	___awdiv@quotient+1,c
  1594  007EE8  0E00               	movlw	0
  1595  007EEA  6E07               	movwf	___awdiv@quotient,c
  1596  007EEC  5003               	movf	___awdiv@divisor,w,c
  1597  007EEE  1004               	iorwf	___awdiv@divisor+1,w,c
  1598  007EF0  B4D8               	btfsc	status,2,c
  1599  007EF2  D01C               	goto	l1381
  1600  007EF4  0E01               	movlw	1
  1601  007EF6  6E05               	movwf	___awdiv@counter,c
  1602  007EF8  D004               	goto	l1367
  1603  007EFA                     l1365:
  1604  007EFA  90D8               	bcf	status,0,c
  1605  007EFC  3603               	rlcf	___awdiv@divisor,f,c
  1606  007EFE  3604               	rlcf	___awdiv@divisor+1,f,c
  1607  007F00  2A05               	incf	___awdiv@counter,f,c
  1608  007F02                     l1367:
  1609  007F02  AE04               	btfss	___awdiv@divisor+1,7,c
  1610  007F04  D7FA               	goto	l1365
  1611  007F06                     l1369:
  1612  007F06  90D8               	bcf	status,0,c
  1613  007F08  3607               	rlcf	___awdiv@quotient,f,c
  1614  007F0A  3608               	rlcf	___awdiv@quotient+1,f,c
  1615  007F0C  5003               	movf	___awdiv@divisor,w,c
  1616  007F0E  5C01               	subwf	___awdiv@dividend,w,c
  1617  007F10  5004               	movf	___awdiv@divisor+1,w,c
  1618  007F12  5802               	subwfb	___awdiv@dividend+1,w,c
  1619  007F14  A0D8               	btfss	status,0,c
  1620  007F16  D005               	goto	l1377
  1621  007F18  5003               	movf	___awdiv@divisor,w,c
  1622  007F1A  5E01               	subwf	___awdiv@dividend,f,c
  1623  007F1C  5004               	movf	___awdiv@divisor+1,w,c
  1624  007F1E  5A02               	subwfb	___awdiv@dividend+1,f,c
  1625  007F20  8007               	bsf	___awdiv@quotient,0,c
  1626  007F22                     l1377:
  1627  007F22  90D8               	bcf	status,0,c
  1628  007F24  3204               	rrcf	___awdiv@divisor+1,f,c
  1629  007F26  3203               	rrcf	___awdiv@divisor,f,c
  1630  007F28  2E05               	decfsz	___awdiv@counter,f,c
  1631  007F2A  D7ED               	goto	l1369
  1632  007F2C                     l1381:
  1633  007F2C  5006               	movf	___awdiv@sign,w,c
  1634  007F2E  B4D8               	btfsc	status,2,c
  1635  007F30  D004               	goto	l1385
  1636  007F32  6C07               	negf	___awdiv@quotient,c
  1637  007F34  1E08               	comf	___awdiv@quotient+1,f,c
  1638  007F36  B0D8               	btfsc	status,0,c
  1639  007F38  2A08               	incf	___awdiv@quotient+1,f,c
  1640  007F3A                     l1385:
  1641  007F3A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1642  007F3E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1643  007F42  0012               	return	
  1644  007F44                     __end_of___awdiv:
  1645                           	opt stack 0
  1646  0000                     postinc0	equ	0xFEE
  1647                           wreg	equ	0xFE8
  1648                           status	equ	0xFD8
  1649                           postinc0	equ	0xFEE
  1650                           wreg	equ	0xFE8
  1651                           status	equ	0xFD8
  1652                           
  1653                           	psect	rparam
  1654  0000                     postinc0	equ	0xFEE
  1655                           wreg	equ	0xFE8
  1656                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      61
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    CDC_RESULT	PTR unsigned int [12] size(2) Largest target is 3648
		 -> NULL(NULL[0]), RAM(DATA[3648]), 


Critical Paths under _main in COMRAM

    _main->_switch_LED
    _switch_LED->_w32_spi
    _read_sensor->_w16_r16_spi
    _get_ID->_w16_r16_spi
    _delay_ms->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    4528
                                             30 COMRAM     7     7      0
                           _delay_ms
                             _get_ID
                        _read_sensor
                          _setup_mcu
                          _setup_spi
                         _switch_LED
                    _uart_write_char
            _uart_write_unsigned_int
 ---------------------------------------------------------------------------------
 (1) _uart_write_unsigned_int                              4     2      2     318
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _uart_write_char                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _switch_LED                                           8     4      4    1578
                                             22 COMRAM     8     4      4
                            _get_CDC
                            _w32_spi
 ---------------------------------------------------------------------------------
 (2) _w32_spi                                             22    18      4     640
                                              0 COMRAM    22    18      4
 ---------------------------------------------------------------------------------
 (1) _setup_spi                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup_mcu                                            0     0      0       0
                          _init_uart
                         _setup_port
 ---------------------------------------------------------------------------------
 (2) _setup_port                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_sensor                                          6     4      2     579
                                             22 COMRAM     6     4      2
                        _w16_r16_spi
 ---------------------------------------------------------------------------------
 (1) _get_ID                                               5     3      2    1252
                                             22 COMRAM     5     3      2
                            _get_CDC
                        _w16_r16_spi
 ---------------------------------------------------------------------------------
 (2) _w16_r16_spi                                         22    20      2     435
                                              0 COMRAM    22    20      2
 ---------------------------------------------------------------------------------
 (2) _get_CDC                                              4     0      4     674
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             5     3      2     649
                                              8 COMRAM     5     3      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
     ___awdiv
   _get_ID
     _get_CDC
     _w16_r16_spi
   _read_sensor
     _w16_r16_spi
   _setup_mcu
     _init_uart
     _setup_port
   _setup_spi
   _switch_LED
     _get_CDC
     _w32_spi
   _uart_write_char
   _uart_write_unsigned_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      3D       1       64.2%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3D       6        0.0%
DATA                 0      0      3D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon May 29 12:53:54 2017

                     _SSPSTATbits 000FC7                                l65 7C8E  
                              l68 7C9E                      ___awdiv@sign 0006  
                    __CFG_CP0$OFF 000000                               l230 7C68  
                             l151 7E0C                               l160 7E36  
                             l233 7C70                               l154 7E1A  
                             l218 7C0A                               l157 7E28  
                             l190 7E8C                               l184 7E70  
                             l193 7E9A                               l187 7E7E  
                             u675 7D34                               u857 7CF4  
                             wreg 000FE8                        _TXSTA1bits 000FAC  
                            l1341 7C92                              l1423 7CEE  
                            l1415 7DA2                              l1353 7ED4  
                            l1425 7CFE                              l1419 7DBE  
                            l1365 7EFA                              l1381 7F2C  
                            l1367 7F02                              l1359 7EE4  
                            l1631 7F92                              l1623 7F64  
                            l1385 7F3A                              l1377 7F22  
                            l1369 7F06                              l1643 7FD8  
                            l1649 7FF2                              _main 7F44  
__size_of_uart_write_unsigned_int 001A                              start 0000  
                   ??_w16_r16_spi 0003                     __CFG_IESO$OFF 000000  
                   __CFG_FOSC$HS1 000000                      ___param_bank 000000  
                 __end_of_w32_spi 7E42          __size_of_uart_write_char 000C  
                           ?_main 0001                   __end_of___awdiv 7F44  
                 ___awdiv@divisor 0003                             _RC1IF 007CF5  
           w16_r16_spi@blank_high 0011                   ___awdiv@counter 0005  
                           _TRISB 000F93                             _TRISC 000F94  
                 __end_of_get_CDC 7CA2                    __CFG_FCMEN$OFF 000000  
                    ?_read_sensor 0017                      main@sensor_0 0023  
                           status 000FD8            w16_r16_spi@address_low 0009  
                 __initialization 7C24                      __end_of_main 8000  
             __end_of_w16_r16_spi 7EC0                   switch_LED@state 0017  
                          ??_main 001F                     main@device_ID 0021  
                   __activetblptr 000000                  ___awdiv@dividend 0001  
                     w32_spi@data 0003                     main@indicator 0025  
                  __CFG_WDTEN$OFF 000000                            _RCREG1 000FAE  
                          _SPBRG1 000FAF                            _SSPBUF 000FC9  
           switch_LED@message_277 001D                            _TXREG1 000FAD  
                          _TXSTA1 000FAC                  __end_of_delay_ms 7D10  
                       ??_w32_spi 0005                    __CFG_XINST$OFF 000000  
                       ??___awdiv 0005                    __CFG_STVREN$ON 000000  
                          _get_ID 7D10                            clear_0 7C2A  
                ___awdiv@quotient 0007                         ??_get_CDC 0005  
                          main@bb 001F                 ??_uart_write_char 0001  
         w16_r16_spi@address_high 000B           _uart_write_unsigned_int 7C60  
                      __accesstop 0060           __end_of__initialization 7C30  
                   ___rparam_used 000001                       _w16_r16_spi 7E42  
                  __pcstackCOMRAM 0001              __size_of_read_sensor 002E  
              __size_of_init_uart 0014                           ?_get_ID 0017  
                __CFG_CANMX$PORTB 000000                __size_of_setup_mcu 000A  
              __size_of_setup_spi 0016                         ?_delay_ms 0009  
                   w16_r16_spi@p1 0005                     w16_r16_spi@p2 0007  
                   w16_r16_spi@p3 0013                     w16_r16_spi@p4 0015  
       ??_uart_write_unsigned_int 0003                           _w32_spi 7DD4  
                         __Hparam 0000                           __Lparam 0000  
                         ___awdiv 7EC0                   __size_of_get_ID 0058  
                         __pcinit 7C24                           _get_CDC 7C7A  
                         __ramtop 0F00                           __ptext0 7F44  
                         __ptext1 7C60                           __ptext2 7C08  
                         __ptext3 7D68                           __ptext4 7DD4  
                         __ptext5 7C4A                           __ptext6 7BFE  
                         __ptext7 7C14                           __ptext8 7C36  
                         __ptext9 7CA2                    w32_spi@address 0001  
               __end_of_init_uart 7C4A                        ??_delay_ms 000B  
            end_of_initialization 7C30                 __end_of_setup_mcu 7C08  
               __end_of_setup_spi 7C60   __end_of_uart_write_unsigned_int 7C7A  
                         postinc0 000FEE                   _uart_write_char 7C08  
                      _setup_port 7C14                     get_CDC@number 0001  
                   get_CDC@option 0003                      ?_w16_r16_spi 0001  
                      _switch_LED 7D68                         w32_spi@p1 0007  
                       w32_spi@p2 0009                         w32_spi@p3 000B  
                       w32_spi@p4 000D              w16_r16_spi@blank_low 000F  
                  __end_of_get_ID 7D68               w32_spi@address_high 0011  
             start_initialization 7C24                 switch_LED@message 001B  
             uart_write_char@data 0001           __end_of_uart_write_char 7C14  
                        ??_get_ID 0019                       ?_setup_port 0001  
                     __pbssCOMRAM 0026                     ??_read_sensor 0019  
               __size_of_delay_ms 0040                          ?_w32_spi 0001  
                     ?_switch_LED 0017                          ?___awdiv 0001  
                        ?_get_CDC 0001                          _BAUDCON1 000FA7  
    uart_write_unsigned_int@char1 0003      uart_write_unsigned_int@char2 0004  
                w32_spi@data_high 0015                         _init_uart 7C36  
                        _LATCbits 000F8B                         delay_ms@j 000C  
                       delay_ms@n 0009               __end_of_read_sensor 7CD0  
                       get_ID@cdc 0017                          _PIE1bits 000F9D  
             __size_of_setup_port 0010                  ?_uart_write_char 0001  
                        _PIR1bits 000F9E              __size_of_w16_r16_spi 007E  
                       _setup_mcu 7BFE                         _setup_spi 7C4A  
                __CFG_SOSCSEL$DIG 000000          ?_uart_write_unsigned_int 0001  
             __size_of_switch_LED 006C                        ?_init_uart 0001  
              w32_spi@address_low 000F                     switch_LED@cdc 0019  
                      _CDC_RESULT 0026                          __Hrparam 0000  
                    get_ID@result 001A                  __size_of_w32_spi 006E  
                        __Lrparam 0000           read_sensor@sensor_value 001B  
                __size_of___awdiv 0084                        ?_setup_mcu 0001  
                      ?_setup_spi 0001                  __size_of_get_CDC 0028  
                        _delay_ms 7CD0              read_sensor@register1 0019  
                        __ptext10 7D10                          __ptext11 7E42  
                        __ptext12 7C7A                          __ptext13 7CD0  
                        __ptext14 7EC0                       _read_sensor 7CA2  
                   __size_of_main 00BC                   w32_spi@data_low 0013  
               read_sensor@sensor 0017                w16_r16_spi@address 0001  
                    ??_setup_port 0001                       ??_init_uart 0001  
                      _RCSTA1bits 000FAB                      ??_switch_LED 001B  
              __end_of_setup_port 7C24                       ??_setup_mcu 0001  
                     ??_setup_spi 0001                 w16_r16_spi@result 000D  
                     _SSPCON1bits 000FC6                __end_of_switch_LED 7DD4  
   uart_write_unsigned_int@number 0001  
